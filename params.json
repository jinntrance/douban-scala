{"name":"Douban-scala","tagline":"Scala SDK for http://www.douban.com","body":"##豆瓣 API v2的非官方Scala/Java/Android SDK\r\n\r\n囊括豆瓣开放了的稳定API或测试API。文档不够完善处，大家可以一起完善。\r\n\r\njava也可使用本SDK，但不如Scala使用便利。\r\n\r\n本SDK使用scala 2.11，json處理使用GSON。\r\n\r\n其他语言SDK<http://developers.douban.com/wiki/?title=sdk>请参看豆瓣API小组<http://www.douban.com/group/dbapi/>\r\n\r\n使用本SDK时也可参照test下的内容。\r\n\r\nScala <https://github.com/jinntrance/douban-scala/blob/master/src/test/scala/com/douban/models/AuthTest.scala>\r\n\r\nJava <https://github.com/jinntrance/douban-scala/blob/master/src/test/java/com/douban/models/AuthJavaTest.java>\r\n\r\n###使用本SDK应用列表\r\n赌书泼茶 <https://github.com/jinntrance/douban-android>\r\n\r\n####开发注意事项\r\n\r\n1.请求成功返回结果形式如Option<AccessTokenResult>，使用其get()获取想要结构AccessTokenResult；失败则返回None。\r\n\r\n2.很多接口添加了withResult参数，默认为true。例如Android上发表评论后，知道成功失败与否即可，不必返回发表成功后的评论信息，则可设置其为false节省流量。\r\n\r\n3.最好使用maven添加函數依赖，这样可以同时下载source和javadoc便于开发\r\n\r\n####java/android使用注意\r\n\r\n1.getter直接使用\"属性+()\"的方法，如Auth.api_key()，setter使用Auth.api_key$_eq(\"you key\")\r\n\r\n2.Android开发需要添加proguard 参数，参照链接中proguard 配置文件 <https://github.com/jinntrance/douban-android/blob/master/proguard.cfg> 若想使用Scala在Android上开发，请参照“赌书泼茶” <https://github.com/jinntrance/douban-android> \r\n\r\n3.其他使用可refer to <http://twitter.github.io/scala_school/java.html>\r\n\r\n\r\n目前已完成的接口有：\r\n```\r\n* 用户 User\r\n* 读书 Book\r\n* 电影 Movie\r\n* 音乐 Music\r\n* 同城活动 Event\r\n* 论坛 Discussion\r\n* 日记 Note\r\n* 相册 Album\r\n* 图片 Photo\r\n* 回复 Comment\r\n```\r\n待完成的(后面几个接口很难申请权限,接口中可测试部分已测试通过)：\r\n\r\n```\r\n* 广播 Status\r\n* 豆邮 Doumail\r\n* 线上活动 Online\r\n* 我去 Place\r\n```\r\n\r\n## 开发配置\r\n使用maven开发，在pom.xml中添加如下配置\r\n\r\n```\r\n<dependency>\r\n    <groupId>com.douban</groupId>\r\n    <artifactId>scala-api_2.11</artifactId>\r\n    <version>2.4.7</version>\r\n</dependency>\r\n```\r\n\r\n使用SBT作scala开发，在build.sbt中添加如下配置\r\n\r\n使用sbt作android开发可以参照配置<https://github.com/jinntrance/douban-android>\r\n\r\n```\r\nlibraryDependencies += \"com.douban\" % \"scala-api_2.11\" % \"2.4.7\" withSources() withJavadoc()\r\n```\r\n\r\n\r\n### 使用说明\r\n\r\n#### OAuth 2.0 认证\r\nScala 参见<https://github.com/jinntrance/douban-scala/blob/master/src/test/scala/com/douban/models/AuthTest.scala>\r\n\r\nJava <https://github.com/jinntrance/douban-scala/blob/master/src/test/java/com/douban/models/AuthJavaTest.java>\r\n## 引导用户授权\r\n\r\n```\r\n    Desktop.getDesktop.browse(new URI(Auth.getAuthUrl(Auth.api_key)))\r\n    val codeUrl = readLine(\"please copy the url here after authorization>\\n\")\r\n    val code = Auth.extractCode(codeUrl) //取出 authorization code\r\n    val token:AccessTokenResult=Auth.getTokenByCode(code,api_key,secret) //取回 access token\r\n```\r\n##如果有之前有refresh token，则可用\r\n\r\n```\r\n    val refresh_token=\"your refresh token\"\r\n    val token: AccessTokenResult = Auth.getTokenByFresh(refresh_token,api_key,secret)\r\n\r\n```\r\n\r\n#### 接口说明\r\n\r\n默认参数（参考豆瓣官方文档）,查询时分页需要:\r\n```\r\nstart: 0\r\ncount: 20\r\n```\r\n所有返回数据以豆瓣官方文档为准，各接口末尾处均有相应链接入口。\r\n\r\n__所有 __\r\n\r\n```\r\n通过id查找当前对象.byId(id),例如 获取一本图书信息 Book.byId(id)\r\n使用任何接口前，需要设置授权后的Access Token：Req.init(access_token) \r\nScala <https://github.com/jinntrance/douban-scala/blob/master/src/test/scala/com/douban/common/BaseTest.scala>\r\nJava <https://github.com/jinntrance/douban-scala/blob/master/src/test/java/com/douban/common/BaseJavaTest.java>\r\n```\r\n\r\n__图书、电影、音乐 Book/Movie/Music__\r\n\r\n```\r\n获取图书标签 .tagsOf(id) ,id为当前对象id\r\n获取某个Item中标记最多的标签 .popTags(id)\r\n发表新评论 .postReview(r),其中r为BookReviewPosted/MovieReviewPosted/MusicReviewPosted\r\n修改评论  .updateReview(reviewId,r),其中rF为ReviewPosted\r\n删除评论 .deleteReview(reviewId)\r\n搜索 .search(query: String, tag: String, page: Int = 1, count: Int = 20)，其中query为关键字，tag为标签，page为查询第几页，count为每页显示数量\r\n```\r\n\r\n__用户 User__\r\n<http://developers.douban.com/wiki/?title=user_v2>\r\n\r\n```\r\n# 以下 id 指用户数字 id\r\n当前用户 User.ofMe\r\n指定用户 User.byId(id)\r\n搜索用户 User.search(q,page=1,count=20)       // q: 搜索的关键词,page查询第几页，count每页多少\r\n```\r\n\r\n__读书 Book__\r\n<http://developers.douban.com/wiki/?title=book_v2>\r\n\r\n```\r\n## 以下 id 指图书条目数字 id\r\n## q: 关键词, tag: 标签\r\n通过isbn获取信息 Book.byISBN(isbn_number)\r\n获取某个用户的所有图书收藏信息 Book.collectionsOfUser(userId)\r\n获取用户对某本图书的收藏信息 Book.collectionOf(bookId)\r\n用户收藏某本图书 postCollection(bookId,c: CollectionPosted)\r\n用户修改对某本图书的收藏 updateCollection(bookId,c: CollectionPosted)\r\n用户删除对某本图书的收藏  deleteCollection(bookId)\r\n获取某个用户的所有笔记 annotationsOfUser(userId)\r\n获取某本图书的所有笔记 annotationsOf(bookId)\r\n获取某篇笔记的信息 annotation(annotationId)\r\n用户给某本图书写笔记 postAnnotation(bookId,a: AnnotationPosted)\r\n用户修改某篇笔记 updateAnnotation((annotationId: Long, a: AnnotationPosted)\r\n用户刪除某篇笔记 deleteAnnotation(annotationId)\r\n```\r\n\r\n__电影 Movie__\r\n<http://developers.douban.com/wiki/?title=movie_v2>\r\n\r\n```\r\n## 以下 id 指电影条目数字 id\r\n通过imdb获取电影 Movie.byImdb(imdb_number)\r\n```\r\n\r\n__音乐 Music__\r\n<http://developers.douban.com/wiki/?title=music_v2>\r\n\r\n```\r\n见\"图书、电影、音乐 Book/Movie/Music\"\r\n```\r\n\r\n__日记 Note__\r\n<http://developers.douban.com/wiki/?title=note_v2>\r\n\r\n```\r\n## 以下 id 指日记数字 id\r\n## format: html_full, html_short, abstract, text，默认为text\r\n获取一篇日记 Note.byId(id, format='text')\r\n新写一篇日记 Note.postNote(n:NotePosted)\r\n更新一篇日记 Note.update(noteId:Long,n:NotePosted)\r\n上传图片到日记 Note.uploadPicture(noteId:Long,n:NotePosted)//Note.genPicFormat,genUrlFormat生成图片和url格式放在日记内容中\r\n删除一篇日记 Note.deleteNote(id)\r\n喜欢一篇日记     Note.like(id)\r\n取消喜欢一篇日记 Note.unlike(id)\r\n获取用户日记列表       Note.notesUserCreated(userId, start, count)\r\n获取用户喜欢的日记列表 Note.notesUserLiked(userId, start, count)\r\n```\r\n\r\n__相册 Album__\r\n<http://developers.douban.com/wiki/?title=album_v2>\r\n<http://developers.douban.com/wiki/?title=photo_v2>\r\n\r\n```\r\n## 以下 id 指相册数字 id\r\n## desc 描述文字\r\n获取相册或图片 Album.byId Photo.byId\r\n获取相册图片列表 Album.photos(id, s:AlbumSearch)\r\n```\r\n\r\n__线上活动 Online__\r\n<http://developers.douban.com/wiki/?title=online_v2>\r\n\r\n```\r\n## 以下 id 指线上活动数字 id\r\n## begin_time, end_time 格式为 '%Y-%m-%d %H:%M:%S'\r\n## cate 可选值: day, week, latest\r\n发表一条线上活动 Online.createOnline(o:OnlinePosted)\r\n更新一条线上活动 Online.updateOnline(onlineId:Long,o:OnlinePosted)\r\n删除一条线上活动 Online.deleteOnline(id)\r\n喜欢一条线上活动 Online.likeOnline(id)\r\n取消喜欢线上活动 Online.unlikeOnline(id)\r\n获取线上活动图片列表 Online.photos(id, start, count)\r\n上传图片到线上活动   Online.upload(id, image) # image = open('xxx.jpg')\r\n获取参加线上活动成员列表 Online.targetsUserParticipated(id)\r\n参加活动 Online.participate(targetId,p: ParticipateDate )\r\n取消参加活动 Online.participate(targetId)\r\n活动参与人 Online.participants\r\n获取线上活动列表 Online.onlinesList(cate=\"week\")\r\n获取参加过的活动 Online.targetsUserParticipated(userId)\r\n获取创建过的活动 Online.targetsUserCreated(userId)\r\n```\r\n\r\n\r\n__同城活动 Event__\r\n<http://developers.douban.com/wiki/?title=event_v2>\r\n\r\n```\r\n## 以下 id 指同城活动 id\r\n## Loc: 城市\r\n## dayType: dayType 时间类型\tfuture, week, weekend, today, tomorrow\r\n## type: 活动类型\tall,music, film, drama, commonweal, salon, exhibition, party, sports, travel, others\r\n搜索同城活动 Event.events(location,dayType, type)\r\n\r\n参加同城活动 Event.participate(id)\r\n取消参加活动 Event.unParticipate(id)\r\n\r\n对同城活动感兴趣 Event.wish(id)\r\n取消同城活动兴趣 Event.unwish(id)\r\n\r\n某同城活动参加者   Event.participants(id)\r\n某同城活动感兴趣者 Event.wishers(id)\r\n\r\n获取用户创建过的同城活动 Event.targetsUserCreated(userId)\r\n获取用户参加过的同城活动 Event.participated(userId)\r\n获取用户感兴趣的同城活动 Event.eventsUserWished(userId)\r\n\r\n获取城市列表 Loc.list\r\n获取某個城市列表信息 Loc.byId\r\n```\r\n\r\n__论坛 Discussion__\r\n<http://developers.douban.com/wiki/?title=discussion_v2>\r\n\r\n```\r\n## 以下 discussionId 指论坛帖子 id\r\n## target 指相应产品线（如 online, event 等）\r\n## targetId 指相应产品 id\r\n获取帖子 Discussion.byId(id)\r\n发表帖子 Discussion.postDiscussion(targetId: Long, d: DiscussionPosted)\r\n更新帖子 Discussion.updateDiscussion(discussionId, d: DiscussionPosted)\r\n删除帖子 Discussion.deleteDiscussion(discussionId)\r\n```\r\n__评论 Comment__\r\n<http://developers.douban.com/wiki/?title=comment_v2>\r\n\r\n```\r\n// target 指相应产品线（如 Online, Event，Note,Album 等）\r\n新加一条回复 postComment(targetId:Long,content:String,\r\n获取某条回复 getComment(targetId:Long,commentId:String)\r\n删除某条回复 deleteComment(targetId:Long,commentId:String)\r\n```\r\n__豆瓣实验室 Bubbler__\r\n<http://developers.douban.com/wiki/?title=labs>\r\n\r\n```\r\n用戶信息 Bubbler.user(userId)\r\n用戶Bubs Bubbler.bubs(userId)\r\n用戶boards Bubbler.boards(boardId)\r\n用戶walls Bubbler.walls(userId)\r\n```\r\n\r\n__我去接口 Place__\r\n<http://developers.douban.com/wiki/?title=travel_v2>\r\n\r\n```\r\n获取地点信息 Place.byId(placeId)\r\n获取某个用户的地点收藏 Place.userCollections(userId)   //可选参数 TravelSearch\r\n```\r\n\r\n\r\n### 联系\r\n* 使用 douban-scala 过程中遇到 bug, 可以到 [Issues](https://github.com/jinntrance/douban-scala/issues) 或 [豆瓣小组] (http://www.douban.com/group/topic/36158803/) 反馈\r\n* 本文档多参照豆瓣Python SDK的文档，多谢。\r\n\r\n\r\n<script type=\"text/javascript\" src=\"http://www.josephjctang.com/assets/js/analytics.js\" sync=\"sync\"></script>","google":"UA-39438576-1","note":"Don't delete this file! It's used internally to help with page regeneration."}